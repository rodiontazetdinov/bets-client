;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

;;
;; Type: Deploy
;; Header: 0x946a98b6
;; TLB: deploy#946a98b6 queryId:uint64 = Deploy
;;

(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: DeployOk
;; Header: 0xaff90f57
;; TLB: deploy_ok#aff90f57 queryId:uint64 = DeployOk
;;

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

((int)) $DeployOk$_constructor_queryId(int queryId) inline {
    return (queryId);
}

;;
;; Type: Finalist
;; TLB: _ teamName:^string teamLink:^string teamPlace:int257 = Finalist
;;

builder $Finalist$_store(builder build_0, (slice, slice, int) v) inline {
    var (v'teamName, v'teamLink, v'teamPlace) = v;
    build_0 = build_0.store_ref(begin_cell().store_slice(v'teamName).end_cell());
    build_0 = build_0.store_ref(begin_cell().store_slice(v'teamLink).end_cell());
    build_0 = build_0.store_int(v'teamPlace, 257);
    return build_0;
}

cell $Finalist$_store_cell((slice, slice, int) v) inline {
    return $Finalist$_store(begin_cell(), v).end_cell();
}

(slice, ((slice, slice, int))) $Finalist$_load(slice sc_0) inline {
    var v'teamName = sc_0~load_ref().begin_parse();
    var v'teamLink = sc_0~load_ref().begin_parse();
    var v'teamPlace = sc_0~load_int(257);
    return (sc_0, (v'teamName, v'teamLink, v'teamPlace));
}

;;
;; Type: FinalistMessage
;; Header: 0x9581de3e
;; TLB: finalist_message#9581de3e item:Finalist{teamName:^string,teamLink:^string,teamPlace:int257} = FinalistMessage
;;

(slice, (((slice, slice, int)))) $FinalistMessage$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2508316222);
    var v'item = sc_0~$Finalist$_load();
    return (sc_0, (v'item));
}

;;
;; Type: StartFinalists
;; Header: 0x4c041236
;; TLB: start_finalists#4c041236 items:dict<int, ^Finalist{teamName:^string,teamLink:^string,teamPlace:int257}> = StartFinalists
;;

(slice, ((cell))) $StartFinalists$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1275335222);
    var v'items = sc_0~load_dict();
    return (sc_0, (v'items));
}

;;
;; Type: FinalistContract
;;

builder $FinalistContract$_store(builder build_0, (cell, cell, int) v) inline {
    var (v'finalistList, v'startFinalistList, v'finalistIndex) = v;
    build_0 = build_0.store_dict(v'finalistList);
    build_0 = build_0.store_dict(v'startFinalistList);
    build_0 = build_0.store_uint(v'finalistIndex, 16);
    return build_0;
}

(slice, ((cell, cell, int))) $FinalistContract$_load(slice sc_0) inline {
    var v'finalistList = sc_0~load_dict();
    var v'startFinalistList = sc_0~load_dict();
    var v'finalistIndex = sc_0~load_uint(16);
    return (sc_0, (v'finalistList, v'startFinalistList, v'finalistIndex));
}

(cell, cell, int) $FinalistContract$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$FinalistContract$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        return $FinalistContract$_contract_init();
    }
}

() $FinalistContract$_contract_store((cell, cell, int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $FinalistContract$_store(b, v);
    set_data(b.end_cell());
}